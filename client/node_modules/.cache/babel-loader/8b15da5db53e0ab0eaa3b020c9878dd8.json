{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  mens: 5\n}; // return the shop state from the state\n\nconst selectShop = state => state.shop; // return the collections from the shop state\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // currying\n// find the collection.id matching the url param of our collection id map\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])));","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/shop/shopSelectors.js"],"names":["memoize","createSelector","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","mens","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT,QAA+B,UAA/B;AAEA,MAAMC,iBAAiB,GAAG;AACzBC,EAAAA,IAAI,EAAE,CADmB;AAEzBC,EAAAA,QAAQ,EAAE,CAFe;AAGzBC,EAAAA,OAAO,EAAE,CAHgB;AAIzBC,EAAAA,MAAM,EAAE,CAJiB;AAKzBC,EAAAA,IAAI,EAAE;AALmB,CAA1B,C,CAQA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGV,cAAc,CAC9C,CAACO,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACE,WAF+B,CAAxC,C,CAKP;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGb,OAAO,CAAEc,kBAAD,IACvCb,cAAc,CAAC,CAACU,iBAAD,CAAD,EAAuBC,WAAD,IACnCA,WAAW,CAACG,IAAZ,CACEC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBf,iBAAiB,CAACY,kBAAD,CADpD,CADa,CADwB,CAAhC","sourcesContent":["import memoize from 'lodash.memoize'\n\nimport { createSelector } from 'reselect'\n\nconst COLLECTION_ID_MAP = {\n\thats: 1,\n\tsneakers: 2,\n\tjackets: 3,\n\twomens: 4,\n\tmens: 5,\n}\n\n// return the shop state from the state\nconst selectShop = (state) => state.shop\n\n// return the collections from the shop state\nexport const selectCollections = createSelector(\n\t[selectShop],\n\t(shop) => shop.collections\n)\n\n// currying\n// find the collection.id matching the url param of our collection id map\nexport const selectCollection = memoize((collectionUrlParam) =>\n\tcreateSelector([selectCollections], (collections) =>\n\t\tcollections.find(\n\t\t\t(collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n\t\t)\n\t)\n)\n"]},"metadata":{},"sourceType":"module"}