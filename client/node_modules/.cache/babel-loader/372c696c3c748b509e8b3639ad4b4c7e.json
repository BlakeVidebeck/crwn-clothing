{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/register/Register.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { emailSignInStart, signUpStart } from '../../redux/user/userActions';\nimport { RegisterContainer, RegisterTitle } from './RegisterStyles';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert('passwords do not match');\n        return;\n      }\n\n      emailSignInStart(displayName, email, password);\n      this.setState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(RegisterContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RegisterTitle, {\n        children: \"I do not have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signInStart: (displayName, email, password) => dispatch(signInStart({\n    displayName,\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/register/Register.js"],"names":["React","connect","FormInput","CustomButton","auth","createUserProfileDocument","emailSignInStart","signUpStart","RegisterContainer","RegisterTitle","Register","Component","constructor","handleSubmit","e","preventDefault","displayName","email","password","confirmPassword","state","alert","setState","handleChange","name","value","target","render","mapDispatchToProps","dispatch","signInStart"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput'\nimport CustomButton from '../custom-button/CustomButton'\n\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nimport { emailSignInStart, signUpStart } from '../../redux/user/userActions'\n\nimport { RegisterContainer, RegisterTitle } from './RegisterStyles'\n\nclass Register extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tdisplayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: '',\n\t\t}\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tconst { displayName, email, password, confirmPassword } = this.state\n\t\tif (password !== confirmPassword) {\n\t\t\talert('passwords do not match')\n\t\t\treturn\n\t\t}\n\n\t\temailSignInStart(displayName, email, password)\n\n\t\tthis.setState({\n\t\t\tdisplayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: '',\n\t\t})\n\t}\n\n\thandleChange = (e) => {\n\t\tconst { name, value } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\trender() {\n\t\tconst { displayName, email, password, confirmPassword } = this.state\n\t\treturn (\n\t\t\t<RegisterContainer>\n\t\t\t\t<RegisterTitle>I do not have an account</RegisterTitle>\n\t\t\t\t<span>Sign up with your email and password</span>\n\t\t\t\t<form className='sign-up-form' onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='displayName'\n\t\t\t\t\t\tvalue={displayName}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel='Display Name'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tlabel='Confirm Password'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<CustomButton type='submit'>Register</CustomButton>\n\t\t\t\t</form>\n\t\t\t</RegisterContainer>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsignInStart: (displayName, email, password) =>\n\t\tdispatch(signInStart({ displayName, email, password })),\n})\n\nexport default connect(null, mapDispatchToProps)(Register)\n"]},"metadata":{},"sourceType":"module"}