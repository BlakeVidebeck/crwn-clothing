{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './userConstants';\nimport { googleSignInSuccess, googleSignInFail, emailSignInSuccess, emailSignInFail } from './userActions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    googleSignInFail(error);\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {} catch (error) {\n    yield put(emailSignInFail(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/user/userSagas.js"],"names":["takeLatest","put","all","call","EMAIL_SIGN_IN_START","GOOGLE_SIGN_IN_START","googleSignInSuccess","googleSignInFail","emailSignInSuccess","emailSignInFail","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSignInStart","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,iBAA1D;AAEA,SACCC,mBADD,EAECC,gBAFD,EAGCC,kBAHD,EAICC,eAJD,QAKO,eALP;AAOA,SACCC,IADD,EAECC,cAFD,EAGCC,yBAHD,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMb,IAAI,CAACS,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMjB,GAAG,CACRK,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAGA,GAPD,CAOE,OAAOC,KAAP,EAAc;AACfd,IAAAA,gBAAgB,CAACc,KAAD,CAAhB;AACA;AACD;AAED,OAAO,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAClE,MAAI,CACH,CADD,CACE,OAAOJ,KAAP,EAAc;AACf,UAAMpB,GAAG,CAACQ,eAAe,CAACY,KAAD,CAAhB,CAAT;AACA;AACD;AAED,OAAO,UAAUK,mBAAV,GAAgC;AACtC,QAAM1B,UAAU,CAACK,oBAAD,EAAuBQ,gBAAvB,CAAhB;AACA;AAED,OAAO,UAAUc,kBAAV,GAA+B;AACrC,QAAM3B,UAAU,CAACI,mBAAD,EAAsBkB,eAAtB,CAAhB;AACA;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC5B,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport { EMAIL_SIGN_IN_START, GOOGLE_SIGN_IN_START } from './userConstants'\n\nimport {\n\tgoogleSignInSuccess,\n\tgoogleSignInFail,\n\temailSignInSuccess,\n\temailSignInFail,\n} from './userActions'\n\nimport {\n\tauth,\n\tgoogleProvider,\n\tcreateUserProfileDocument,\n} from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst { user } = yield auth.signInWithPopup(googleProvider)\n\t\tconst userRef = yield call(createUserProfileDocument, user)\n\t\tconst userSnapshot = yield userRef.get()\n\t\tyield put(\n\t\t\tgoogleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n\t\t)\n\t} catch (error) {\n\t\tgoogleSignInFail(error)\n\t}\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n\ttry {\n\t} catch (error) {\n\t\tyield put(emailSignInFail(error))\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* onEmailSignInStart() {\n\tyield takeLatest(EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* userSagas() {\n\tyield all([call(onGoogleSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}