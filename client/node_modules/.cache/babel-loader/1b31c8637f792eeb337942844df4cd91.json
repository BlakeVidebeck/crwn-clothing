{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\nimport { LoginContainer, LoginTitle, ButtonsBarContainer } from './LoginStyles';\n\nconst Login = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = credentials;\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCredentials({\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginContainer, {\n    children: [/*#__PURE__*/_jsxDEV(LoginTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        label: 'email',\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        label: 'password',\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        handleChange: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"sZVqDY6NkcFX5o7eL6aiVYJr61E=\");\n\n_c = Login;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/login/Login.js"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","LoginContainer","LoginTitle","ButtonsBarContainer","Login","credentials","setCredentials","email","password","handleChange","e","value","name","target","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SACCC,iBADD,EAECC,gBAFD,QAGO,8BAHP;AAKA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,mBAArC,QAAgE,eAAhE;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEL,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA;;AAC1D,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC;AAC9CY,IAAAA,KAAK,EAAE,EADuC;AAE9CC,IAAAA,QAAQ,EAAE;AAFoC,GAAD,CAA9C;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,WAA5B;;AAEA,QAAMI,YAAY,GAAIC,CAAD,IAAO;AAC3B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,cAAc,CAAC;AAAE,OAACM,IAAD,GAAQD;AAAV,KAAD,CAAd;AACA,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAOJ,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACK,cAAF;AAEAf,IAAAA,gBAAgB,CAACO,KAAD,EAAQC,QAAR,CAAhB;AACA,GAJD;;AAMA,sBACC,QAAC,cAAD;AAAA,4BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,KAAK,EAAE,OAFR;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,KAAK,EAAEP,KAJR;AAKC,QAAA,YAAY,EAAEE,YALf;AAMC,QAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,cADD,eASC,QAAC,SAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,KAAK,EAAE,UAFR;AAGC,QAAA,IAAI,EAAC,UAHN;AAIC,QAAA,KAAK,EAAED,QAJR;AAKC,QAAA,QAAQ,EAAEC,YALX;AAMC,QAAA,YAAY;AANb;AAAA;AAAA;AAAA;AAAA,cATD,eAiBC,QAAC,mBAAD;AAAA,gCACC,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,YAAD;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,OAAO,EAAEV,iBAFV;AAGC,UAAA,cAAc,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAmCA,CAtDD;;GAAMK,K;;KAAAA,K;;AAwDN,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACzClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADQ;AAEzCC,EAAAA,gBAAgB,EAAE,CAACO,KAAD,EAAQC,QAAR,KACjBS,QAAQ,CAACjB,gBAAgB,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAHgC,CAAf,CAA3B;;AAMA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,KAAlC,CAAf","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput'\nimport CustomButton from '../custom-button/CustomButton'\n\nimport {\n\tgoogleSignInStart,\n\temailSignInStart,\n} from '../../redux/user/userActions'\n\nimport { LoginContainer, LoginTitle, ButtonsBarContainer } from './LoginStyles'\nconst Login = ({ googleSignInStart, emailSignInStart }) => {\n\tconst [credentials, setCredentials] = useState({\n\t\temail: '',\n\t\tpassword: '',\n\t})\n\n\tconst { email, password } = credentials\n\n\tconst handleChange = (e) => {\n\t\tconst { value, name } = e.target\n\t\tsetCredentials({ [name]: value })\n\t}\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault()\n\n\t\temailSignInStart(email, password)\n\t}\n\n\treturn (\n\t\t<LoginContainer>\n\t\t\t<LoginTitle>I already have an account</LoginTitle>\n\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='email'\n\t\t\t\t\tlabel={'email'}\n\t\t\t\t\tname='email'\n\t\t\t\t\tvalue={email}\n\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype='password'\n\t\t\t\t\tlabel={'password'}\n\t\t\t\t\tname='password'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\thandleChange\n\t\t\t\t/>\n\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t<CustomButton type='submit'>Login</CustomButton>\n\t\t\t\t\t<CustomButton\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t>\n\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t</CustomButton>\n\t\t\t\t</ButtonsBarContainer>\n\t\t\t</form>\n\t\t</LoginContainer>\n\t)\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password })),\n})\n\nexport default connect(null, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}