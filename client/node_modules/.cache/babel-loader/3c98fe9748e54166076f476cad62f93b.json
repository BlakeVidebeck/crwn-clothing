{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blakevidebeck/CodeProjects/crwn-clothing/src/App.js\";\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomeScreen from './screens/homescreen/HomeScreen';\nimport ShopScreen from './screens/shopscreen/ShopScreen';\nimport LoginAndRegisterScreen from './screens/LoginAndRegisterScreen/LoginAndRegisterScreen';\nimport CheckoutScreen from './screens/checkout/CheckoutScreen';\nimport Header from './components/header/Header';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/userActions';\nimport { selectCurrentUser } from './redux/user/userSelectors';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; // if the auth state changes then pass userAuth object\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      console.log(userAuth); // if auth state changes then create a user profile\n\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); // then set the state to the userRef\n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        }); // if no userAuth then set state as null\n      } else {\n        setCurrentUser(userAuth);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/checkout\",\n          component: CheckoutScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/shop\",\n          component: ShopScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(LoginAndRegisterScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomeScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/App.js"],"names":["React","Route","Switch","Redirect","connect","createStructuredSelector","HomeScreen","ShopScreen","LoginAndRegisterScreen","CheckoutScreen","Header","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","console","log","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport './App.css'\n\nimport HomeScreen from './screens/homescreen/HomeScreen'\nimport ShopScreen from './screens/shopscreen/ShopScreen'\nimport LoginAndRegisterScreen from './screens/LoginAndRegisterScreen/LoginAndRegisterScreen'\nimport CheckoutScreen from './screens/checkout/CheckoutScreen'\n\nimport Header from './components/header/Header'\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport { setCurrentUser } from './redux/user/userActions'\nimport { selectCurrentUser } from './redux/user/userSelectors'\n\nclass App extends React.Component {\n\tunsubscribeFromAuth = null\n\n\tcomponentDidMount() {\n\t\tconst { setCurrentUser } = this.props\n\t\t// if the auth state changes then pass userAuth object\n\t\tthis.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n\t\t\tconsole.log(userAuth)\n\n\t\t\t// if auth state changes then create a user profile\n\t\t\tif (userAuth) {\n\t\t\t\tconst userRef = await createUserProfileDocument(userAuth)\n\t\t\t\t// then set the state to the userRef\n\t\t\t\tuserRef.onSnapshot((snapShot) => {\n\t\t\t\t\tsetCurrentUser({\n\t\t\t\t\t\tid: snapShot.id,\n\t\t\t\t\t\t...snapShot.data(),\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t// if no userAuth then set state as null\n\t\t\t} else {\n\t\t\t\tsetCurrentUser(userAuth)\n\t\t\t}\n\t\t})\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unsubscribeFromAuth()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/checkout' component={CheckoutScreen} />\n\t\t\t\t\t<Route path='/shop' component={ShopScreen} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/login'\n\t\t\t\t\t\trender={() =>\n\t\t\t\t\t\t\tthis.props.currentUser ? (\n\t\t\t\t\t\t\t\t<Redirect to='/' />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<LoginAndRegisterScreen />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path='/' component={HomeScreen} />\n\t\t\t\t</Switch>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = createStructuredSelector({\n\tcurrentUser: selectCurrentUser,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsetCurrentUser: (user) => dispatch(setCurrentUser(user)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}