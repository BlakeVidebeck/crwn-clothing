{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blakevidebeck/CodeProjects/crwn-clothing/src/screens/shopscreen/ShopScreen.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport CollectionScreen from '../collection/CollectionScreen';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shopActions';\nimport WithSpinner from '../../components/withSpinner/WithSpinner';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionScreenWithSpinner = WithSpinner(CollectionScreen);\n_c2 = CollectionScreenWithSpinner;\n\nclass ShopScreen extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/crwn-clothing-3dc79/databases/(default)/documents/collections').then(resp => resp.json()).then(collections => console.log(collections)); // collectionRef.get().then((snapshot) => {\n    // \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    // \tupdateCollections(collectionsMap)\n    // \tthis.setState({ loading: false })\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionName`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionScreenWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopScreen);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionScreenWithSpinner\");","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/screens/shopscreen/ShopScreen.js"],"names":["React","Route","connect","CollectionsOverview","CollectionScreen","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionOverviewWithSpinner","CollectionScreenWithSpinner","ShopScreen","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","resp","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACL,mBAAD,CAAjD;KAAMM,6B;AACN,MAAMC,2BAA2B,GAAGF,WAAW,CAACJ,gBAAD,CAA/C;MAAMM,2B;;AAEN,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACPC,MAAAA,OAAO,EAAE;AADF,KADgC;AAAA,SAIxCC,uBAJwC,GAId,IAJc;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAG;AACnB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AAEA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CACJ,4GADI,CAAL,CAGEC,IAHF,CAGQC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAHjB,EAIEF,IAJF,CAIQG,WAAD,IAAiBC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAJxB,EALmB,CAWnB;AACA;AACA;AACA;AACA;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACC,QAAC,KAAD;AACC,QAAA,KAAK,MADN;AAEC,QAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAFrB;AAGC,QAAA,MAAM,EAAGZ,KAAD,iBACP,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cADD,eAQC,QAAC,KAAD;AACC,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,kBADrB;AAEC,QAAA,MAAM,EAAGZ,KAAD,iBACP,QAAC,2BAAD;AAA6B,UAAA,SAAS,EAAEH,OAAxC;AAAA,aAAqDG;AAArD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cARD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAiBA;;AA5CuC;;AA+CzC,MAAMa,kBAAkB,GAAIC,QAAD,KAAe;AACzCxB,EAAAA,iBAAiB,EAAGyB,cAAD,IAClBD,QAAQ,CAACxB,iBAAiB,CAACyB,cAAD,CAAlB;AAFgC,CAAf,CAA3B;;AAKA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,UAAlC,CAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview'\nimport CollectionScreen from '../collection/CollectionScreen'\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\nimport { updateCollections } from '../../redux/shop/shopActions'\n\nimport WithSpinner from '../../components/withSpinner/WithSpinner'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionScreenWithSpinner = WithSpinner(CollectionScreen)\n\nclass ShopScreen extends React.Component {\n\tstate = {\n\t\tloading: true,\n\t}\n\tunSubscribeFromSnapshot = null\n\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props\n\n\t\tconst collectionRef = firestore.collection('collections')\n\n\t\tfetch(\n\t\t\t'https://firestore.googleapis.com/v1/projects/crwn-clothing-3dc79/databases/(default)/documents/collections'\n\t\t)\n\t\t\t.then((resp) => resp.json())\n\t\t\t.then((collections) => console.log(collections))\n\n\t\t// collectionRef.get().then((snapshot) => {\n\t\t// \tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t// \tupdateCollections(collectionsMap)\n\t\t// \tthis.setState({ loading: false })\n\t\t// })\n\t}\n\n\trender() {\n\t\tconst { match } = this.props\n\t\tconst { loading } = this.state\n\t\treturn (\n\t\t\t<div className='shop-screen'>\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<CollectionOverviewWithSpinner isLoading={loading} {...props} />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionName`}\n\t\t\t\t\trender={(props) => (\n\t\t\t\t\t\t<CollectionScreenWithSpinner isLoading={loading} {...props} />\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCollections: (collectionsMap) =>\n\t\tdispatch(updateCollections(collectionsMap)),\n})\n\nexport default connect(null, mapDispatchToProps)(ShopScreen)\n"]},"metadata":{},"sourceType":"module"}