{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFail } from './shopActions';\nimport { FETCH_COLLECTIONS_START } from './shopTypes';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFail(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/client/src/redux/shop/shopSagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFail","FETCH_COLLECTIONS_START","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,uBAAT,EAAkCC,oBAAlC,QAA8D,eAA9D;AAEA,SAASC,uBAAT,QAAwC,aAAxC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,MAAI;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACI,+BAAD,EAAkCO,QAAlC,CAAjC;AAEA,UAAMV,GAAG,CAACI,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACA,GAND,CAME,OAAOC,GAAP,EAAY;AACb,UAAMb,GAAG,CAACK,oBAAoB,CAACQ,GAAG,CAACC,OAAL,CAArB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,UAAU,CAACQ,uBAAD,EAA0BC,qBAA1B,CAAhB;AACA;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAMf,GAAG,CAAC,CAACF,IAAI,CAACgB,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects'\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFail } from './shopActions'\n\nimport { FETCH_COLLECTIONS_START } from './shopTypes'\n\nexport function* fetchCollectionsAsync() {\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections')\n\t\tconst snapshot = yield collectionRef.get()\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n\n\t\tyield put(fetchCollectionsSuccess(collectionsMap))\n\t} catch (err) {\n\t\tyield put(fetchCollectionsFail(err.message))\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n\nexport function* shopSagas() {\n\tyield all([call(fetchCollectionsStart)])\n}\n"]},"metadata":{},"sourceType":"module"}