{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // check to see if the new item already exists in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n  console.log(existingCartItem); // if existingCartItem exists then create a new array\n  // and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n  // with the attached quantity property set to 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/cart/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","console","log","map","quantity"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAC1D;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAAzB;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,gBAAZ,EAN0D,CAQ1D;AACA;;AACA,MAAIA,gBAAJ,EAAsB;AACrB,WAAOF,SAAS,CAACQ,GAAV,CAAeJ,QAAD,IACpBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACG,EAAE,GAAGD,QAAL;AAAeK,MAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AAA7C,KADH,GAEGL,QAHG,CAAP;AAKA,GAhByD,CAkB1D;AACA;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBQ,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACA,CArBM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n\t// check to see if the new item already exists in the cart\n\tconst existingCartItem = cartItems.find(\n\t\t(cartItem) => cartItem.id === cartItemToAdd.id\n\t)\n\n\tconsole.log(existingCartItem)\n\n\t// if existingCartItem exists then create a new array\n\t// and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\tif (existingCartItem) {\n\t\treturn cartItems.map((cartItem) =>\n\t\t\tcartItem.id === cartItemToAdd.id\n\t\t\t\t? { ...cartItem, quantity: cartItem.quantity + 1 }\n\t\t\t\t: cartItem\n\t\t)\n\t}\n\n\t// if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n\t// with the attached quantity property set to 1\n\treturn [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n"]},"metadata":{},"sourceType":"module"}