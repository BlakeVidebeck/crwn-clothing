{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/login/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/userActions';\nimport { LoginContainer, LoginTitle, ButtonsBarContainer } from './LoginStyles';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LoginTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          label: 'email',\n          name: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          label: 'password',\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange,\n          handleChange: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/components/login/Login.js"],"names":["React","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","LoginContainer","LoginTitle","ButtonsBarContainer","Login","Component","constructor","props","handleChange","e","value","name","target","setState","handleSubmit","preventDefault","email","password","state","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport FormInput from '../form-input/FormInput'\nimport CustomButton from '../custom-button/CustomButton'\n\nimport {\n\tgoogleSignInStart,\n\temailSignInStart,\n} from '../../redux/user/userActions'\n\nimport { LoginContainer, LoginTitle, ButtonsBarContainer } from './LoginStyles'\nclass Login extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tconst { value, name } = e.target\n\t\tthis.setState({ [name]: value })\n\t}\n\n\thandleSubmit = async (e) => {\n\t\te.preventDefault()\n\t\tconst { emailSignInStart } = this.props\n\t\tconst { email, password } = this.state\n\n\t\temailSignInStart(email, password)\n\t}\n\n\trender() {\n\t\tconst { googleSignInStart } = this.props\n\t\treturn (\n\t\t\t<LoginContainer>\n\t\t\t\t<LoginTitle>I already have an account</LoginTitle>\n\t\t\t\t<span>Sign in with your email and password</span>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tlabel={'email'}\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<FormInput\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tlabel={'password'}\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\thandleChange\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonsBarContainer>\n\t\t\t\t\t\t<CustomButton type='submit'>Login</CustomButton>\n\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tonClick={googleSignInStart}\n\t\t\t\t\t\t\tisGoogleSignIn\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSign in with Google\n\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t</ButtonsBarContainer>\n\t\t\t\t</form>\n\t\t\t</LoginContainer>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tgoogleSignInStart: () => dispatch(googleSignInStart()),\n\temailSignInStart: (email, password) =>\n\t\tdispatch(emailSignInStart({ email, password })),\n})\n\nexport default connect(null, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}