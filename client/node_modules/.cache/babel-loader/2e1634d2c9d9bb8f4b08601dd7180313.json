{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFail } from './shopActions';\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAIL } from './shopTypes';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFail(err.message));\n  } // collectionRef\n  // \t.get()\n  // \t.then((snapshot) => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n  // \t})\n  // \t.catch((err) => dispatch(fetchCollectionsFail(err.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/shop/shopSagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFail","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAIL","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SACCC,SADD,EAECC,+BAFD,QAGO,+BAHP;AAKA,SAASC,uBAAT,EAAkCC,oBAAlC,QAA8D,eAA9D;AAEA,SACCC,uBADD,EAECC,yBAFD,EAGCC,sBAHD,QAIO,aAJP;AAMA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMhB,IAAI,CAACG,+BAAD,EAAkCW,QAAlC,CAAjC;AAEA,UAAMb,GAAG,CAACG,uBAAuB,CAACY,cAAD,CAAxB,CAAT;AACA,GAND,CAME,OAAOC,GAAP,EAAY;AACb,UAAMhB,GAAG,CAACI,oBAAoB,CAACY,GAAG,CAACC,OAAL,CAArB,CAAT;AACA,GAXuC,CAaxC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMpB,SAAS,CAACO,uBAAD,EAA0BG,qBAA1B,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\n\nimport {\n\tfirestore,\n\tconvertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFail } from './shopActions'\n\nimport {\n\tFETCH_COLLECTIONS_START,\n\tFETCH_COLLECTIONS_SUCCESS,\n\tFETCH_COLLECTIONS_FAIL,\n} from './shopTypes'\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('I am fired')\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections')\n\t\tconst snapshot = yield collectionRef.get()\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n\n\t\tyield put(fetchCollectionsSuccess(collectionsMap))\n\t} catch (err) {\n\t\tyield put(fetchCollectionsFail(err.message))\n\t}\n\n\t// collectionRef\n\t// \t.get()\n\t// \t.then((snapshot) => {\n\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n\t// \t})\n\t// \t.catch((err) => dispatch(fetchCollectionsFail(err.message)))\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n"]},"metadata":{},"sourceType":"module"}