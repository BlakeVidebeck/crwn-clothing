{"ast":null,"code":"import { TOGGLE_CART_HIDDEN, ADD_ITEM, CLEAR_ITEM_FROM_CART, REMOVE_ITEM } from './cartConstants';\nimport { addItemToCart, removeItemFromCart } from './cartUtils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, payload)\n      };\n\n    case REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, payload)\n      };\n\n    case CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        // returns a new array with all the items that do not match the payload.id\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/cart/cartReducer.js"],"names":["TOGGLE_CART_HIDDEN","ADD_ITEM","CLEAR_ITEM_FROM_CART","REMOVE_ITEM","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","payload","filter","cartItem","id"],"mappings":"AAAA,SACCA,kBADD,EAECC,QAFD,EAGCC,oBAHD,EAICC,WAJD,QAKO,iBALP;AAMA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,aAAlD;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACC,SAAKZ,kBAAL;AACC,aAAO,EACN,GAAGU,KADG;AAENH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFT,OAAP;;AAID,SAAKN,QAAL;AACC,aAAO,EACN,GAAGS,KADG;AAENF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBK,OAAlB;AAFlB,OAAP;;AAKD,SAAKV,WAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBK,OAAlB;AAFvB,OAAP;;AAKD,SAAKX,oBAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAEN;AACAF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBH,OAAO,CAACG,EAD5B;AAHL,OAAP;;AAQD;AACC,aAAON,KAAP;AA5BF;AA8BA,CAjCD;;AAmCA,eAAeD,WAAf","sourcesContent":["import {\n\tTOGGLE_CART_HIDDEN,\n\tADD_ITEM,\n\tCLEAR_ITEM_FROM_CART,\n\tREMOVE_ITEM,\n} from './cartConstants'\nimport { addItemToCart, removeItemFromCart } from './cartUtils'\n\nconst INITIAL_STATE = {\n\thidden: true,\n\tcartItems: [],\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n\tconst { type, payload } = action\n\n\tswitch (type) {\n\t\tcase TOGGLE_CART_HIDDEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thidden: !state.hidden,\n\t\t\t}\n\t\tcase ADD_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: addItemToCart(state.cartItems, payload),\n\t\t\t}\n\n\t\tcase REMOVE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: removeItemFromCart(state.cartItems, payload),\n\t\t\t}\n\n\t\tcase CLEAR_ITEM_FROM_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t// returns a new array with all the items that do not match the payload.id\n\t\t\t\tcartItems: state.cartItems.filter(\n\t\t\t\t\t(cartItem) => cartItem.id !== payload.id\n\t\t\t\t),\n\t\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default cartReducer\n"]},"metadata":{},"sourceType":"module"}