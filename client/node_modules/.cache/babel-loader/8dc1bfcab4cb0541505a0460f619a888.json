{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect'; // return the shop state from the state\n\nconst selectShop = state => state.shop; // return the collections from the shop state\n\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // turn the shop data object into an array to be able to map through it\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // return the collection state where the collectionNameParam (hats) matches the key in the shopdata object\n\nexport const selectCollection = memoize(collectionNameParam => createSelector([selectCollections], collections => collections[collectionNameParam]));","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/shop/shopSelectors.js"],"names":["memoize","createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionNameParam"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC,C,CAEA;;;AACA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC9C,CAACC,UAAD,CAD8C,EAE7CE,IAAD,IAAUA,IAAI,CAACE,WAF+B,CAAxC,C,CAKP;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACxD,CAACI,iBAAD,CADwD,EAEvDC,WAAD,IACCA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHjB,CAAlD,C,CAMP;;AACA,OAAO,MAAMC,gBAAgB,GAAGZ,OAAO,CAAEa,mBAAD,IACvCZ,cAAc,CACb,CAACI,iBAAD,CADa,EAEZC,WAAD,IAAiBA,WAAW,CAACO,mBAAD,CAFf,CADwB,CAAhC","sourcesContent":["import memoize from 'lodash.memoize'\n\nimport { createSelector } from 'reselect'\n\n// return the shop state from the state\nconst selectShop = (state) => state.shop\n\n// return the collections from the shop state\nexport const selectCollections = createSelector(\n\t[selectShop],\n\t(shop) => shop.collections\n)\n\n// turn the shop data object into an array to be able to map through it\nexport const selectCollectionsForPreview = createSelector(\n\t[selectCollections],\n\t(collections) =>\n\t\tcollections ? Object.keys(collections).map((key) => collections[key]) : []\n)\n\n// return the collection state where the collectionNameParam (hats) matches the key in the shopdata object\nexport const selectCollection = memoize((collectionNameParam) =>\n\tcreateSelector(\n\t\t[selectCollections],\n\t\t(collections) => collections[collectionNameParam]\n\t)\n)\n"]},"metadata":{},"sourceType":"module"}