{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  // check to see if the new item already exists in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // if existingCartItem exists then create a new array\n  // and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n  // with the attached quantity property set to 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  // check to see if the new item already exists in the cart\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // if existingCartItem exists then create a new array\n  // and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id === cartItemToAdd.id);\n  } // if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n  // with the attached quantity property set to 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/Users/blakevidebeck/CodeProjects/crwn-clothing/src/redux/cart/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAC1D;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAAzB,CAF0D,CAM1D;AACA;;AACA,MAAIH,gBAAJ,EAAsB;AACrB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACpBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACG,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADH,GAEGH,QAHG,CAAP;AAKA,GAdyD,CAgB1D;AACA;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACA,CAnBM;AAqBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAClE;AACA,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADpB,CAAzB,CAFkE,CAMlE;AACA;;AACA,MAAIH,gBAAgB,CAACK,QAAjB,KAA8B,CAAlC,EAAqC;AACpC,WAAOP,SAAS,CAACU,MAAV,CAAkBN,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA7D,CAAP;AACA,GAViE,CAYlE;AACA;;;AACA,SAAO,CAAC,GAAGL,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACA,CAfM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n\t// check to see if the new item already exists in the cart\n\tconst existingCartItem = cartItems.find(\n\t\t(cartItem) => cartItem.id === cartItemToAdd.id\n\t)\n\n\t// if existingCartItem exists then create a new array\n\t// and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\tif (existingCartItem) {\n\t\treturn cartItems.map((cartItem) =>\n\t\t\tcartItem.id === cartItemToAdd.id\n\t\t\t\t? { ...cartItem, quantity: cartItem.quantity + 1 }\n\t\t\t\t: cartItem\n\t\t)\n\t}\n\n\t// if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n\t// with the attached quantity property set to 1\n\treturn [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n\t// check to see if the new item already exists in the cart\n\tconst existingCartItem = cartItems.find(\n\t\t(cartItem) => cartItem.id === cartItemToAdd.id\n\t)\n\n\t// if existingCartItem exists then create a new array\n\t// and find the existing cart item and spread in the existing data and add 1 to the quantity of it\n\tif (existingCartItem.quantity === 1) {\n\t\treturn cartItems.filter((cartItem) => cartItem.id === cartItemToAdd.id)\n\t}\n\n\t// if a new item then the if block will not run and it will return the cartItems as well as a new CartItem\n\t// with the attached quantity property set to 1\n\treturn [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n"]},"metadata":{},"sourceType":"module"}